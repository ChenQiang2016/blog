<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.LogDao">
  <resultMap id="BaseResultMap" type="com.blog.model.Log">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="log_type" jdbcType="VARCHAR" property="logType" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="state" jdbcType="CHAR" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.model.Log">
    <result column="log_content" jdbcType="LONGVARCHAR" property="logContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, log_type, ctime, state
  </sql>
  <sql id="Blob_Column_List">
    log_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.blog.model.LogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.limitStart} , #{page.pageSize}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.blog.model.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.limitStart} , #{page.pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.model.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.model.Log">
    insert into log (log_id, log_type, ctime, 
      state, log_content)
    values (#{logId,jdbcType=INTEGER}, #{logType,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=CHAR}, #{logContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="logContent != null">
        log_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="logContent != null">
        #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.model.LogExample" resultType="java.lang.Long">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.logContent != null">
        log_content = #{record.logContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update log
    set log_id = #{record.logId,jdbcType=INTEGER},
      log_type = #{record.logType,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=CHAR},
      log_content = #{record.logContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set log_id = #{record.logId,jdbcType=INTEGER},
      log_type = #{record.logType,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.Log">
    update log
    <set>
      <if test="logType != null">
        log_type = #{logType,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="logContent != null">
        log_content = #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.model.Log">
    update log
    set log_type = #{logType,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=CHAR},
      log_content = #{logContent,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.Log">
    update log
    set log_type = #{logType,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=CHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <sql id="sql_where">
    <if test="logType != null and '' != logType">
       and log_type = #{logType,jdbcType=VARCHAR}
    </if>
    <if test="ctime != null and '' != ctime">
       and ctime = #{ctime,jdbcType=TIMESTAMP}
    </if>
    <if test="state != null and '' != state">
       and state = #{state,jdbcType=CHAR}
    </if>
    <if test="logContent != null and '' != logContent">
       and log_content = #{logContent,jdbcType=LONGVARCHAR}
    </if>
  </sql>
  <select id="countPageByMap" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(*) from log
    <where>
      <include refid="sql_where" />
    </where>
  </select>
  <select id="selectPageByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
     select
    <include refid="Base_Column_List" />
     from log
    <where>
      <include refid="sql_where" />
    </where>
    <if test="limitStart != null and pageSize > 0">
      limit #{limitStart} , #{pageSize}
    </if>
  </select>
</mapper>